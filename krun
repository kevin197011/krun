#!/usr/bin/env python
# Copyright (c) 2022 Operator
#
# This software is released under the MIT License.
# https://opensource.org/licenses/MIT


try:
    # after python 3.x
    from urllib.request import urlopen
except ImportError:
    # for python 2.x
    from urllib2 import urlopen

import sys
import os


_action_argv = sys.argv[1].lower()
_debug_flag = sys.argv[2].lower()

# default url
_default_repo_name = 'kevin197011'
_github_repo = "https://github.com/{}/sh/tree/main/lib".format(_default_repo_name)
_github_repo_sh = "https://raw.githubusercontent.com/{}/sh/main/lib".format(_default_repo_name)


# krun need init status
# custom config file
custom_cf = '/etc/krun/config.py'
if not os.path.exists('/etc/krun/config.py'):
    os.makedirs('/etc/krun')
    with open('/etc/krun/config.py', 'w') as f:
        f.write('github_repo_name = None')

sys.path.append('/etc/krun')

import config

_repo_name = config.github_repo_name

if _repo_name != None or _repo_name != '':
    _github_repo = "https://github.com/{}/sh-libs/tree/main".format(_repo_name)
    _github_repo_sh = "https://raw.githubusercontent.com/{}/sh-libs/main".format(_repo_name)


# update krun bin
if _action_argv == 'update':
    with open('/usr/bin/krun', 'w') as f:
        _content = urlopen("https://raw.githubusercontent.com/kevin197011/sh/main/krun").read()
        f.write(_content)
    os.exit(0)

if _action_argv == 'list':
    print("[INFO] script list:")
    _content = urlopen(_github_repo).read()
    _pattern = re.compile(r'>(\S+\.sh|py|rb|pl)</a>')
    _vals = _pattern.findall(_content)
    print('  - ' + '\n  - '.join(_vals))
    os.exit(0)

if _debug_flag == 'debug':
    pass
    os.exit(0)

if _action_argv == 'status' or _action_argv == 'statu' :
    print("[INFO] krun ready!")
    os.exit(0)

if _action_argv == 'uninstall':
    print("[Info] krun uninstall!")
    os.remove('/etc/krun/config.py')
    os.remove('/usr/bin/krun')
    os.rmdir('/etc/krun')
    os.exit(0)

# krun run script file
file_ext_mapper = {
    'sh': 'bash',
    'py': 'python',
    'rb': 'ruby',
    'pl': 'perl'
}

